import { RankedTester } from '../testers';
import { JsonSchema, UISchemaElement } from '../';
export declare const INIT: string;
export declare const UPDATE_DATA: 'jsonforms/UPDATE';
export declare const VALIDATE: string;
export declare const ADD_RENDERER: string;
export declare const REMOVE_RENDERER: string;
export declare const ADD_FIELD: string;
export declare const REMOVE_FIELD: string;
export declare const SET_CONFIG: string;
export interface UpdateAction {
    type: 'jsonforms/UPDATE';
    path: string;
    updater(existingData?: any): any;
}
export declare const init: (data: any, schema?: JsonSchema, uischema?: UISchemaElement) => {
    type: string;
    data: any;
    schema: JsonSchema;
    uischema: UISchemaElement;
};
export declare const update: (path: string, updater: (any: any) => any) => UpdateAction;
export declare const registerRenderer: (tester: RankedTester, renderer: any) => {
    type: string;
    tester: RankedTester;
    renderer: any;
};
export declare const registerField: (tester: RankedTester, field: any) => {
    type: string;
    tester: RankedTester;
    field: any;
};
export declare const unregisterField: (tester: RankedTester, field: any) => {
    type: string;
    tester: RankedTester;
    field: any;
};
export declare const unregisterRenderer: (tester: RankedTester, renderer: any) => {
    type: string;
    tester: RankedTester;
    renderer: any;
};
export declare const setConfig: (config: any) => (dispatch: any) => void;
