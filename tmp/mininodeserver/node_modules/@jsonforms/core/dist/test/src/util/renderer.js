"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
  The MIT License
  
  Copyright (c) 2018 EclipseSource Munich
  https://github.com/eclipsesource/jsonforms
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
const _ = require("lodash");
const util_1 = require("../util");
const reducers_1 = require("../reducers");
const actions_1 = require("../actions");
exports.isPlainLabel = (label) => {
    return typeof label === 'string';
};
exports.mapStateToDispatchRendererProps = (state, ownProps) => ({
    renderers: state.jsonforms.renderers || [],
    schema: ownProps.schema || reducers_1.getSchema(state),
    uischema: ownProps.uischema || reducers_1.getUiSchema(state)
});
/**
 * Map state to layout props.
 * @param state JSONForms state tree
 * @param ownProps any own props
 * @returns {StatePropsOfLayout}
 */
exports.mapStateToLayoutProps = (state, ownProps) => {
    const visible = _.has(ownProps, 'visible') ? ownProps.visible : util_1.isVisible(ownProps, state);
    return {
        renderers: state.renderers,
        visible,
        path: ownProps.path,
        uischema: ownProps.uischema,
        schema: ownProps.schema
    };
};
const isRequired = (schema, schemaPath) => {
    const pathSegments = schemaPath.split('/');
    const lastSegment = pathSegments[pathSegments.length - 1];
    const nextHigherSchemaSegments = pathSegments.slice(0, pathSegments.length - 2);
    const nextHigherSchemaPath = nextHigherSchemaSegments.join('/');
    const nextHigherSchema = util_1.Resolve.schema(schema, nextHigherSchemaPath);
    return nextHigherSchema !== undefined
        && nextHigherSchema.required !== undefined
        && nextHigherSchema.required.indexOf(lastSegment) !== -1;
};
/**
 * Adds an asterisk to the given label string based
 * on the required parameter.
 *
 * @param {string} label the label string
 * @param {boolean} required whether the label belongs to a control which is required
 * @returns {string} the label string
 */
exports.computeLabel = (label, required) => {
    return required ? label + '*' : label;
};
/**
 * Whether an element's description should be hidden.
 *
 * @param visible whether an element is visible
 * @param description the element's description
 * @param isFocused whether the element is focused
 *
 * @returns {boolean} true, if the description is to be hidden, false otherwise
 */
exports.isDescriptionHidden = (visible, description, isFocused) => {
    return description === undefined ||
        (description !== undefined && !visible) ||
        !isFocused;
};
/**
 * Map state to control props.
 * @param state the store's state
 * @param ownProps any own props
 * @returns {StatePropsOfControl} state props for a control
 */
exports.mapStateToControlProps = (state, ownProps) => {
    const path = util_1.composeWithUi(ownProps.uischema, ownProps.path);
    const visible = _.has(ownProps, 'visible') ? ownProps.visible : util_1.isVisible(ownProps, state);
    const enabled = _.has(ownProps, 'enabled') ? ownProps.enabled : util_1.isEnabled(ownProps, state);
    const labelDesc = util_1.createLabelDescriptionFrom(ownProps.uischema);
    const label = labelDesc.show ? labelDesc.text : '';
    const errors = reducers_1.getErrorAt(path)(state).map(error => error.message);
    const controlElement = ownProps.uischema;
    const id = controlElement.scope || '';
    const required = controlElement.scope !== undefined && isRequired(ownProps.schema, controlElement.scope);
    const resolvedSchema = util_1.Resolve.schema(ownProps.schema, controlElement.scope);
    const description = resolvedSchema !== undefined ? resolvedSchema.description : '';
    const defaultConfig = _.cloneDeep(reducers_1.getConfig(state));
    const config = _.merge(defaultConfig, controlElement.options);
    return {
        data: util_1.Resolve.data(reducers_1.getData(state), path),
        description,
        errors,
        label,
        visible,
        enabled,
        id,
        path,
        parentPath: ownProps.path,
        required,
        scopedSchema: resolvedSchema,
        uischema: ownProps.uischema,
        schema: ownProps.schema,
        config
    };
};
/**
 *
 * Map dispatch to control props.
 *
 * @param dispatch the store's dispatch method
 * @returns {DispatchPropsOfControl} dispatch props for a control
 */
exports.mapDispatchToControlProps = (dispatch) => ({
    handleChange(path, value) {
        dispatch(actions_1.update(path, () => value));
    }
});
/**
 * Map state to table props
 *
 * @param state the store's state
 * @param ownProps any element's own props
 * @returns {StatePropsOfTable} state props for a table control
 */
exports.mapStateToTableControlProps = (state, ownProps) => {
    const _a = exports.mapStateToControlProps(state, ownProps), { path } = _a, props = __rest(_a, ["path"]);
    const controlElement = ownProps.uischema;
    const resolvedSchema = util_1.Resolve.schema(ownProps.schema, controlElement.scope + '/items');
    const childErrors = reducers_1.getSubErrorsAt(path)(state);
    return Object.assign({}, props, { scopedSchema: resolvedSchema, path,
        childErrors });
};
/**
 * Map dispatch to table control props
 *
 * @param dispatch the store's dispatch method
 * @returns {DispatchPropsOfTable} dispatch props for a table control
 */
exports.mapDispatchToTableControlProps = (dispatch) => ({
    addItem: (path) => () => {
        dispatch(actions_1.update(path, array => {
            if (array === undefined || array === null) {
                return [{}];
            }
            array.push({});
            return array;
        }));
    },
    removeItems: (path, toDelete) => () => {
        dispatch(actions_1.update(path, array => {
            const clone = _.clone(array);
            toDelete.forEach(s => clone.splice(clone.indexOf(s), 1));
            return clone;
        }));
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVuZGVyZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdXRpbC9yZW5kZXJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQXVCRTtBQUNGLDRCQUE0QjtBQUU1QixrQ0FNaUI7QUFHakIsMENBT3FCO0FBQ3JCLHdDQUFvQztBQVF2QixRQUFBLFlBQVksR0FBRyxDQUFDLEtBQXNCLEVBQW1CLEVBQUU7SUFDdEUsTUFBTSxDQUFDLE9BQU8sS0FBSyxLQUFLLFFBQVEsQ0FBQztBQUNuQyxDQUFDLENBQUM7QUEwS1csUUFBQSwrQkFBK0IsR0FBRyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDbkUsU0FBUyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUMsU0FBUyxJQUFJLEVBQUU7SUFDMUMsTUFBTSxFQUFFLFFBQVEsQ0FBQyxNQUFNLElBQUksb0JBQVMsQ0FBQyxLQUFLLENBQUM7SUFDM0MsUUFBUSxFQUFFLFFBQVEsQ0FBQyxRQUFRLElBQUksc0JBQVcsQ0FBQyxLQUFLLENBQUM7Q0FDbEQsQ0FBQyxDQUFDO0FBRUg7Ozs7O0dBS0c7QUFDVSxRQUFBLHFCQUFxQixHQUFHLENBQUMsS0FBSyxFQUFFLFFBQVEsRUFBc0IsRUFBRTtJQUMzRSxNQUFNLE9BQU8sR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUUsZ0JBQVMsQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFNUYsTUFBTSxDQUFDO1FBQ0wsU0FBUyxFQUFFLEtBQUssQ0FBQyxTQUFTO1FBQzFCLE9BQU87UUFDUCxJQUFJLEVBQUUsUUFBUSxDQUFDLElBQUk7UUFDbkIsUUFBUSxFQUFFLFFBQVEsQ0FBQyxRQUFRO1FBQzNCLE1BQU0sRUFB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