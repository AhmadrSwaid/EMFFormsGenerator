"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
  The MIT License
  
  Copyright (c) 2018 EclipseSource Munich
  https://github.com/eclipsesource/jsonforms
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
const React = require("react");
const ReactDOM = require("react-dom");
const JsonRefs = require("json-refs");
const react_redux_1 = require("react-redux");
const core_1 = require("@jsonforms/core");
const react_1 = require("@jsonforms/react");
/**
 * Annotation that registered the given config and class as a custom element
 * @param {CustomElementConfig} config the configuration object for the custom element
 * @constructor
 */
// Usage as decorator
// tslint:disable:variable-name
const CustomElement = (config) => cls => {
    // tslint:enable:variable-name
    if (customElements.get(config.selector)) {
        return;
    }
    customElements.define(config.selector, cls);
};
// TODO: Type parameter
/**
 * HTML element that represents the entry point
 */
let JsonFormsElement = class JsonFormsElement extends HTMLElement {
    /**
     * Constructor.
     */
    constructor() {
        super();
        this.allowDynamicUpdate = false;
    }
    /**
     * Called when this element is inserted into a document.
     */
    connectedCallback() {
        this.allowDynamicUpdate = true;
        this.render();
    }
    /**
     * Set the store to be used by the element
     *
     * @package
     * @param {Object} store the store containing the jsonforms state and reducer
     */
    set store(store) {
        const setupStore = (schema, uischema, d) => {
            store.dispatch(core_1.Actions.init(d, schema, uischema));
            return store;
        };
        const data = core_1.getData(store.getState()) || {};
        JsonRefs
            .resolveRefs(core_1.getSchema(store.getState()) || core_1.Generate.jsonSchema(data), { includeInvalid: true }).then(result => {
            this._store = setupStore(result.resolved, core_1.getUiSchema(store.getState()), data);
            this.render();
        });
    }
    get store() {
        return this._store;
    }
    render() {
        if (!this.allowDynamicUpdate) {
            return;
        }
        if (this._store === null || this._store === undefined) {
            return;
        }
        const storeId = new Date().toISOString();
        ReactDOM.render(React.createElement(react_redux_1.Provider, { store: this._store, key: `${storeId}-store` },
            React.createElement(react_1.JsonForms, null)), this);
    }
};
JsonFormsElement = __decorate([
    CustomElement({
        selector: 'json-forms'
    }),
    __metadata("design:paramtypes", [])
], JsonFormsElement);
exports.JsonFormsElement = JsonFormsElement;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSnNvbkZvcm1zRWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9Kc29uRm9ybXNFbGVtZW50LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQXVCRTtBQUNGLCtCQUErQjtBQUMvQixzQ0FBc0M7QUFDdEMsc0NBQXNDO0FBQ3RDLDZDQUF1QztBQUN2QywwQ0FReUI7QUFDekIsNENBQTZDO0FBVTdDOzs7O0dBSUc7QUFDSCxxQkFBcUI7QUFDckIsK0JBQStCO0FBQy9CLE1BQU0sYUFBYSxHQUFHLENBQUMsTUFBMkIsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUU7SUFDN0QsOEJBQThCO0lBQzVCLEVBQUUsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4QyxNQUFNLENBQUM7SUFDVCxDQUFDO0lBQ0QsY0FBYyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0FBQzlDLENBQUMsQ0FBQztBQUVGLHVCQUF1QjtBQUV2Qjs7R0FFRztBQUlILElBQWEsZ0JBQWdCLEdBQTdCLHNCQUE4QixTQUFRLFdBQVc7SUFLL0M7O09BRUc7SUFDSDtRQUNFLEtBQUssRUFBRSxDQUFDO1FBUEYsdUJBQWtCLEdBQUcsS0FBSyxDQUFDO0lBUW5DLENBQUM7SUFFRDs7T0FFRztJQUNILGlCQUFpQjtRQUNmLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ2hCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNILElBQUksS0FBSyxDQUFDLEtBQTRCO1FBQ3BDLE1BQU0sVUFBVSxHQUFHLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN6QyxLQUFLLENBQUMsUUFBUSxDQUFDLGNBQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUFFLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBRWxELE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDZixDQUFDLENBQUM7UUFFRixNQUFNLElBQUksR0FBRyxjQUFPLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDO1FBRTdDLFFBQVE7YUFDTCxXQUFXLENBQ1YsZ0JBQVMsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsSUFBSSxlQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUN4RCxFQUFFLGNBQWMsRUFBRSxJQUFJLEVBQUUsQ0FDekIsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDZCxJQUFJLENBQUMsTUFBTSxHQUFHLFVBQVUsQ0FDdEIsTUFBTSxDQUFDLFFBQVEsRUFDZixrQkFBVyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQyxFQUM3QixJQUFJLENBQ0wsQ0FBQztZQUNGLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNoQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRCxJQUFJLEtBQUs7UUFDUCxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUNyQixDQUFDO0lBRU8sTUFBTTtRQUNaLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUMsQ0FBQztZQUM3QixNQUFNLENBQUM7UUFDVCxDQUFDO1FBQ0QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLE1BQU0sS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ3RELE1BQU0sQ0FBQztRQUNULENBQUM7UUFFRCxNQUFNLE9BQU8sR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRXpDLFFBQVEsQ0FBQyxNQUFNLENBQ2Isb0JBQUMsc0JBQVEsSUFBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsR0FBRyxPQUFPLFFBQVE7WUFDbkQsb0JBQUMsaUJBQVMsT0FBRyxDQUNKLEVBQ1gsSUFBSSxDQUNMLENBQUM7SUFDSixDQUFDO0NBQ0YsQ0FBQTtBQXRFWSxnQkFBZ0I7SUFINUIsYUFBYSxDQUFDO1FBQ2IsUUFBUSxFQUFFLFlBQVk7S0FDdkIsQ0FBQzs7R0FDVyxnQkFBZ0IsQ0FzRTVCO0FBdEVZLDRDQUFnQiJ9