"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/*
  The MIT License
  
  Copyright (c) 2018 EclipseSource Munich
  https://github.com/eclipsesource/jsonforms
  
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
*/
require("@jsonforms/test");
const ava_1 = require("ava");
const core_1 = require("@jsonforms/core");
const redux_1 = require("redux");
const test_1 = require("@jsonforms/test");
const JsonFormsElement_1 = require("../src/JsonFormsElement");
ava_1.default.beforeEach(t => {
    t.context.data = { name: 'foo' };
    t.context.schema = {
        type: 'object',
        properties: {
            name: {
                type: 'string'
            }
        }
    };
    t.context.uischema = {
        type: 'Control',
        scope: '#/properties/name'
    };
    t.context.renderers = [
        { tester: test_1.fakeControlTester, renderer: test_1.FakeControl },
        { tester: test_1.fakeLayoutTester, renderer: test_1.FakeLayout }
    ];
});
ava_1.default.cb('render with data set', t => {
    const jsonForms = new JsonFormsElement_1.JsonFormsElement();
    const jsonSchema = core_1.generateJsonSchema(t.context.data);
    jsonForms.store = redux_1.createStore(redux_1.combineReducers({ jsonforms: core_1.jsonformsReducer() }), {
        jsonforms: {
            core: {
                data: t.context.data,
            },
            renderers: t.context.renderers
        }
    });
    jsonForms.connectedCallback();
    setTimeout(() => {
        t.is(jsonForms.children.length, 1);
        t.is(jsonForms.children.item(0).className, 'layout');
        t.deepEqual(core_1.getSchema(jsonForms.store.getState()), jsonSchema);
        t.deepEqual(core_1.getUiSchema(jsonForms.store.getState()), core_1.generateDefaultUISchema(jsonSchema));
        t.end();
    }, 100);
});
ava_1.default.cb('render with data and data schema set', t => {
    t.plan(4);
    const jsonForms = new JsonFormsElement_1.JsonFormsElement();
    jsonForms.store = redux_1.createStore(redux_1.combineReducers({ jsonforms: core_1.jsonformsReducer() }), {
        jsonforms: {
            core: {
                data: t.context.data,
                schema: t.context.schema
            },
            renderers: t.context.renderers
        }
    });
    setTimeout(() => {
        jsonForms.connectedCallback();
        t.is(jsonForms.children.length, 1);
        t.is(jsonForms.children.item(0).className, 'layout');
        t.deepEqual(core_1.getSchema(jsonForms.store.getState()).properties, t.context.schema.properties);
        t.deepEqual(core_1.getUiSchema(jsonForms.store.getState()), core_1.generateDefaultUISchema(t.context.schema));
        t.end();
    }, 100);
});
ava_1.default.cb('render with data and UI schema set', t => {
    t.plan(4);
    const jsonForms = new JsonFormsElement_1.JsonFormsElement();
    const uischema = t.context.uischema;
    jsonForms.store = redux_1.createStore(redux_1.combineReducers({ jsonforms: core_1.jsonformsReducer() }), {
        jsonforms: {
            core: {
                data: t.context.data,
                uischema: t.context.uischema
            },
            renderers: t.context.renderers
        }
    });
    jsonForms.connectedCallback();
    setTimeout(() => {
        t.is(jsonForms.children.length, 1);
        t.is(jsonForms.children.item(0).className, 'root_properties_name');
        t.deepEqual(core_1.getSchema(jsonForms.store.getState()), core_1.generateJsonSchema({ name: 'foo' }));
        t.is(core_1.getUiSchema(jsonForms.store.getState()), uischema);
        t.end();
    }, 100);
});
ava_1.default.cb('render with data, data schema and UI schema set', t => {
    t.plan(4);
    const jsonForms = new JsonFormsElement_1.JsonFormsElement();
    jsonForms.store = redux_1.createStore(redux_1.combineReducers({ jsonforms: core_1.jsonformsReducer() }), {
        jsonforms: {
            core: {
                data: t.context.data,
                schema: t.context.schema,
                uischema: t.context.uischema
            },
            renderers: t.context.renderers
        }
    });
    setTimeout(() => {
        jsonForms.connectedCallback();
        t.is(jsonForms.children.length, 1);
        t.is(jsonForms.children.item(0).className, 'root_properties_name');
        t.deepEqual(core_1.getSchema(jsonForms.store.getState()).properties, t.context.schema.properties);
        t.is(core_1.getUiSchema(jsonForms.store.getState()), t.context.uischema);
        t.end();
    }, 100);
});
ava_1.default.cb('render with data schema and UI schema set', t => {
    t.plan(3);
    const jsonForms = new JsonFormsElement_1.JsonFormsElement();
    jsonForms.store = redux_1.createStore(redux_1.combineReducers({ jsonforms: core_1.jsonformsReducer() }), {
        jsonforms: {
            core: {
                data: undefined,
                schema: t.context.schema,
                uischema: t.context.uischema
            },
            renderers: t.context.renderers
        }
    });
    setTimeout(() => {
        jsonForms.connectedCallback();
        // label is rendered
        t.is(jsonForms.children.length, 1);
        t.deepEqual(core_1.getSchema(jsonForms.store.getState()), t.context.schema);
        t.is(core_1.getUiSchema(jsonForms.store.getState()), t.context.uischema);
        t.end();
    }, 100);
});
ava_1.default.cb('Connect JSON Forms element and cause re-init store', t => {
    t.plan(6);
    const jsonForms = new JsonFormsElement_1.JsonFormsElement();
    jsonForms.store = redux_1.createStore(redux_1.combineReducers({ jsonforms: core_1.jsonformsReducer() }), {
        jsonforms: {
            core: {
                data: t.context.data,
            },
            renderers: t.context.renderers
        }
    });
    jsonForms.connectedCallback();
    setTimeout(() => {
        t.is(jsonForms.children.length, 1);
        const verticalLayout1 = jsonForms.children.item(0);
        t.is(verticalLayout1.className, 'layout');
        t.is(verticalLayout1.children.length, 1);
        jsonForms.store = redux_1.createStore(redux_1.combineReducers({ jsonforms: core_1.jsonformsReducer() }), {
            jsonforms: {
                core: {
                    data: {
                        firstname: 'bar',
                        lastname: 'foo'
                    }
                },
                renderers: t.context.renderers
            }
        });
        setTimeout(() => {
            t.is(jsonForms.children.length, 1);
            const verticalLayout2 = jsonForms.children.item(0);
            t.is(verticalLayout2.className, 'layout');
            t.is(verticalLayout2.children.length, 2);
            t.end();
        }, 100);
    }, 100);
});
//# sourceMappingURL=data:application/json;base64,